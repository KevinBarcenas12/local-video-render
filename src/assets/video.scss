@use "./mixins" as Mixins;

.video {
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    gap: 1rem;
    padding: 1rem;
    position: relative;

    --size: 1em;
    @include Mixins.mobile {
        --size: .75rem;
    }

    &-stats {
        display: flex;
        flex-direction: column;
        gap: 1rem;
        min-width: 15rem;
        width: 100%;
    }

    @include Mixins.screen-width(854px) {
        flex-direction: row;
        .video-stats {
            width: 30rem;
            max-width: 40vw;
            flex-shrink: 0;
        }
        .video__container {
            aspect-ratio: 16/9;
        }
    }

    @include Mixins.mobile {
        font-size: .75em;
        @media (orientation: landscape) {
            flex-direction: row;
            font-size: .65em;
        }
    }

    #info {
        display: flex;
        flex-direction: column;
    }

    #list {
        max-height: 17rem;
    }

    .video__entry {
        width: 100%;

        .element__content {
            width: 100%;
        }
    }

    &__container {
        height: 100%;
        max-width: 100%;
        max-height: 100%;
        display: block;
        position: relative;
    }

    &__player {
        --max: 50vh;
        @include Mixins.mobile {
            --max: 100vh;
        }

        position: relative;
        display: grid;
        place-items: center;
        place-content: center;
        max-height: var(--max);
        overflow: hidden;
        text-shadow: 0 0 .2rem hsl(0 0% 0% / .25);
        background-color: hsl(var(--hsl-bg-alt) / .05);

        canvas {
            position: relative;
            margin-inline: auto;
            height: 100%;
            width: calc((100vw - 3rem) * (100 / 3));
            max-width: min(calc(var(--max) * var(--w) / var(--h)), 100%);
        }

        &:fullscreen canvas {
            max-height: 100vh;
            max-width: 100vw;
            // width: calc(100vh * (var(--h) / var(--w)));

            @media (hover: none) and (orientation: landscape) {
                width: calc(100vh * (var(--w) / var(--h)));
            }
        }
    }

    .click-handler {
        position: absolute;
        width: 100%;
        height: 100%;
        top: 0;
        left: 0;
        z-index: 1;
    }

    .click {
        position: absolute;
        width: 40%;
        height: 100%;
        top: 0;
        z-index: 2;
        display: none;

        @include Mixins.mobile {
            display: block;
        }

        &.fw {
            right: 0;
        }
        &.bw {
            left: 0;
        }
    }

    &__controls {
        position: absolute;
        width: 100%;
        height: 100%;
        top: 0;
        left: 0;
        color: white;
        user-select: none;
        background: linear-gradient(
            to bottom,
            hsl(0 0% 0% / .1) 0%,
            hsl(0 0% 0% / .025) 3rem,
            hsl(0 0% 0% / .025) calc(100% - 9rem),
            hsl(0 0% 0% / .1) calc(100% - 6rem),
            hsl(0 0% 0% / .1) 100%
        );

        .media-control {

            --size: 1rem;
            position: absolute;
            display: grid;
            font-size: 1.5em;
            cursor: pointer;

            .track {
                position: absolute;
                align-self: center;
                display: grid;
                place-items: center;

                --currentColor: hsl(var(--hsl-track) / 1);
                &.disabled {
                    --currentColor: hsl(var(--hsl-track-disabled) / 1);
                    cursor: not-allowed;
                }

                &__input {
                    width: 100%;
                    cursor: pointer;
                    align-self: center;
                    background-color: transparent;
                    appearance: none;
                    z-index: 5;

                    &::-webkit-slider-thumb {
                        -webkit-appearance: none;
                        appearance: none;
                        width: var(--size);
                        height: var(--size);
                        top: calc(50% - (var(--size) / 2));
                        border-radius: 50%;
                        background-color: var(--currentColor);
                        transform: scale(.8);
                        cursor: pointer;
                        transition: transform .2s ease-in-out, background-color .2s ease-in-out;
                    }

                    &:hover::-webkit-slider-thumb {
                        transform: scale(1);
                    }
                }
                &__progress {
                    background-color: var(--currentColor);
                    position: absolute;
                    height: calc(var(--size) / 2);
                    border-radius: calc(var(--size) / 4);
                    top: calc(50% - (var(--size) / 4));
                    width: calc((var(--value, 0) / 100) * (100% - var(--size)));
                    left: calc(var(--size) / 2);
                    z-index: 4;
                }

                &__total {
                    background-color: hsl(0 0% 10% / .2);
                    height: calc(var(--size) / 2);
                    position: absolute;
                    border-radius: calc(var(--size) / 4);
                    top: calc(50% - calc(var(--size) / 4));
                    width: calc(100% - var(--size));
                    left: calc(var(--size) / 2);
                    z-index: 3;
                }
            }

            &[role="button"] {
                aspect-ratio: 1/1;
            }
            &[role] {
                filter: drop-shadow(0 0 .2rem hsl(0 0% 0% / .25));
                z-index: 3;
            }
            &[role="text"] {
                cursor: default;
                padding: calc(var(--size) / 2);
                font-size: 1.25em;
            }

            &.pause {
                left: var(--size);
                bottom: var(--size);
            }
            &.volume {
                left: calc(var(--size) * 3);
                bottom: var(--size);
                height: 1em;
                width: 1em;
                overflow: hidden;
                transition: width .5s ease-in-out;

                // Hide input when not hovering on pointer devices
                @media (any-hover) {
                    &:hover {
                        width: calc(var(--size) * 8);
                    }
                }
                .track {
                    left: calc(var(--size) * 1.5);
                    width: calc(var(--size) * 6.5);
                }
                .toggler-container {
                    display: grid;
                    place-items: center;
                    aspect-ratio: 1/1;
                    height: 100%;
                    position: absolute;
                    left: 0;
                    top: 0;
                }
            }
            &.fullscreen {
                right: var(--size);
                bottom: var(--size);
            }
            &.exit {
                right: var(--size);
                top: var(--size);
            }
            &.backward {
                left: calc(50% - var(--size) * 2);
                bottom: var(--size);
            }
            &.forward {
                right: calc(50% - var(--size) * 2);
                bottom: var(--size);
            }
            &.moved-timestamp {
                font-size: 1em;
                bottom: calc(var(--size) * 4);
                left: calc(var(--size) / 2);
            }
            &.timestamp {
                --width: 3rem;
                bottom: calc(var(--size) * 3);
                height: calc(var(--size) * 2);
                width: calc(100% - calc(var(--size) * 1));
                left: calc(var(--size) / 2);
                font-size: 1em;
                display: flex;
                justify-content: center;
                align-items: center;

                @include Mixins.mobile {
                    height: var(--size);
                }
                
                & .timestamp__element {
                    width: var(--width);
                    position: absolute;
                    text-align: center;

                    &.current {
                        left: 0;
                    }
                    &.remaining {
                        right: 0;
                    }
                }
                .track {
                    width: calc(100% - (var(--width) * 2 + var(--size)));
                    left: calc(var(--width) + calc(var(--size) / 4));
                }
            }
        }
    }
}